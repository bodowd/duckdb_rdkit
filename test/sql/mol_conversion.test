# name: test/sql/duckdb_rdkit.test
# description: test duckdb_rdkit extension
# group: [duckdb_rdkit]

# Before we load the extension, this will fail
statement error
SELECT mol_from_smiles('CC');
----
Catalog Error: Scalar Function with name mol_from_smiles does not exist!

# Require statement will ensure this test is run with this extension loaded
require duckdb_rdkit

# for the tests:
# a non canonical benzene is used 
# because there is a Mol to VARCHAR cast, we will see a SMILES string coming back
# in order to confirm that the data is being transformed by RDKit internally,
# we use a non RDKIT canonical benzene, and expect a RDKit canonicalized benzene
# to be returned

# mol_from_smiles will return a SMILES string becuase cast from MolToVarChar will happen
query I
SELECT mol_from_smiles('C1=CC=CC=C1');
----
c1ccccc1

# mol_from_smiles on invalid SMILES should return error
statement error
SELECT mol_from_smiles('NOTASMILES');
----
Could not convert NOTASMILES to mol


# mol_to_smiles can convert a proper RDKit pickled molecule back to the SMILES
query I
SELECT mol_to_smiles(mol_from_smiles('C1=CC=CC=C1'))
----
c1ccccc1

# ::mol cast is supported
query I
SELECT 'C1=CC=CC=C1'::mol;
----
c1ccccc1
